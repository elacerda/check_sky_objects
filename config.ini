;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Check Sky Objects configuration file
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; NOTES TO THE CONFIGURATION FILE
; -------------------------------
; Welcome to the check_sky_objects.py configuration file. The program uses 
; astropy.units for the units. See more at:
; 
; https://docs.astropy.org/en/stable/units/index.html#module-astropy.units
; 
; For the correct timezone, the software uses zoneinfo.ZoneInfo() receiving
; time zones as string following the list: 
; 
; https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
;
; About general configparser parameters within this file:
;
; * This file works as an INI file. Variables can be set as:
;   KEY = VALUE
;
; * Commented attributions will be get as None
;
; * if a KEY is defined as blank it will be understood depending on the get
;   function used by the ConfigParser() adopted on the script.
;
; * Sections are defined as:
;   [SECTION]
;
; * Values from same section can be used as variable using the key as ${KEY}.
;   If the KEY is in a different section also can be retrieved as ${SECTION:KEY}.
;
;   Example:
;   --------
;   [FOO]
;   A = 1
;   B = ${A}      ; attributes the same value as the key A
;   [BOO]
;   a = ${FOO:A}  ; attributes the same value as the key A in
;                 ; section FOO
;
; * Inside the configuration file, the word NAME along the filenames will be
;   replaced by the actual name of the object passed by the user during the
;   ana_single.py execution.
;
; * In file commentaries could be preceded by a semicolon (;) or a hashtag (#).
;
; * yes and no are the boolean equivalents for True and False.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; LOCATION COORDINATES
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[location]
; Configure the location coordinates. 
; * hei (height) in meters
lat = -27.480997  
lon = -48.401418  
hei = 20          
; Location Time Zone
; * For more time zones see: 
;   https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
timezone = America/Sao_Paulo
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; T80-South location configuration
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;lat = -30.1678639
;lon = -70.8056889
;hei = 2187
;timezone = America/Santiago

[datetime]
; Datetime configuration of the objects location.
; * DATETIME should be at the location timezone.
; * if DATETIME is now it will use datetime.now(tz=ZoneInfo(TIMEZONE))
;   as the initial datetime.
datetime_format = %Y-%m-%d %H:%M:%S.%f
;datetime = now
datetime = 2023-06-01 06:00:00.0
; The script will produce a (END_TIME_REF - BEGIN_TIME_REF) hours plot 
; with the location (altitude and azimuth) of the objects using datetime
; as the reference (0 is DATETIME).
; * BEGIN_TIME_REF and END_TIME_REF should be integers (hours)

; Example: 
;   The following example will produce a plot with 8 hours in the x-axis
;   showing the objects position at the location sky, 4 hours before datetime
;   till 4 hours after datetime:
;
;   begin_time_ref = -4
;   end_time_ref = 4
begin_time_ref = 0 
end_time_ref = 24

[objects]
; For the right coordinates units see [units] section
;
; Examples in deg, deg:
;
;Antares = 247.35191542,-26.4300261
;Acrux = 186.6495634,-63.09909286
; 
; hourangle, deg
Antares = 16h29m24.46s,-26d25m55.21s
Acrux = 12h26m35.9s,-63d05m56.7s
Betelgeuse = 05h55m10.31s,07d24m25.43s

[units]
loc_lat_unit = deg
loc_lon_unit = deg
obj_ra_unit = hourangle
obj_dec_unit = deg

[plot]
image_dpi = 100
image_ext = png
; OBJECTS_COLORMAP will configure wich color will be used for each object
; on the plot. The colormap will be normalized from 0 to the number of 
; objects and the chosen color will be the color indicated by the object
; index.
; See more colormaps at: 
; https://matplotlib.org/stable/tutorials/colors/colormaps.html
objects_colormap = magma